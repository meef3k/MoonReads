// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoonReads.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MoonReads.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231217163656_Initialize")]
    partial class Initialize
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MoonReads.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            ImageUrl = "https://picsum.photos/350/500/?image=749",
                            Name = "Kaylin Hirthe"
                        },
                        new
                        {
                            Id = 2,
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            ImageUrl = "https://picsum.photos/350/500/?image=297",
                            Name = "Deborah Sauer"
                        },
                        new
                        {
                            Id = 3,
                            Description = "The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design",
                            ImageUrl = "https://picsum.photos/350/500/?image=679",
                            Name = "Patrick Weimann"
                        },
                        new
                        {
                            Id = 4,
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            ImageUrl = "https://picsum.photos/350/500/?image=719",
                            Name = "Jackie Green"
                        },
                        new
                        {
                            Id = 5,
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            ImageUrl = "https://picsum.photos/350/500/?image=837",
                            Name = "Antonia Waters"
                        },
                        new
                        {
                            Id = 6,
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            ImageUrl = "https://picsum.photos/350/500/?image=49",
                            Name = "Bertha Marvin"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            ImageUrl = "https://picsum.photos/350/500/?image=763",
                            Name = "Susan Littel"
                        },
                        new
                        {
                            Id = 8,
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            ImageUrl = "https://picsum.photos/350/500/?image=988",
                            Name = "Jaycee Larkin"
                        },
                        new
                        {
                            Id = 9,
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            ImageUrl = "https://picsum.photos/350/500/?image=63",
                            Name = "Rasheed Hyatt"
                        },
                        new
                        {
                            Id = 10,
                            Description = "The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design",
                            ImageUrl = "https://picsum.photos/350/500/?image=345",
                            Name = "Lue Gibson"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            ImageUrl = "https://picsum.photos/350/500/?image=1007",
                            Name = "Rowena Schulist"
                        },
                        new
                        {
                            Id = 12,
                            Description = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            ImageUrl = "https://picsum.photos/350/500/?image=687",
                            Name = "Vince Mills"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            ImageUrl = "https://picsum.photos/350/500/?image=732",
                            Name = "Eugenia Stokes"
                        },
                        new
                        {
                            Id = 14,
                            Description = "The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design",
                            ImageUrl = "https://picsum.photos/350/500/?image=1073",
                            Name = "Shanie MacGyver"
                        },
                        new
                        {
                            Id = 15,
                            Description = "The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design",
                            ImageUrl = "https://picsum.photos/350/500/?image=278",
                            Name = "Daniela Bartoletti"
                        },
                        new
                        {
                            Id = 16,
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            ImageUrl = "https://picsum.photos/350/500/?image=234",
                            Name = "Libby Spencer"
                        },
                        new
                        {
                            Id = 17,
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            ImageUrl = "https://picsum.photos/350/500/?image=74",
                            Name = "Roberta Ritchie"
                        },
                        new
                        {
                            Id = 18,
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            ImageUrl = "https://picsum.photos/350/500/?image=620",
                            Name = "Demarcus Brown"
                        },
                        new
                        {
                            Id = 19,
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            ImageUrl = "https://picsum.photos/350/500/?image=690",
                            Name = "Isai Schmitt"
                        },
                        new
                        {
                            Id = 20,
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            ImageUrl = "https://picsum.photos/350/500/?image=531",
                            Name = "Noble Harvey"
                        });
                });

            modelBuilder.Entity("MoonReads.Models.AuthorCategory", b =>
                {
                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.HasKey("AuthorId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("AuthorCategories");

                    b.HasData(
                        new
                        {
                            AuthorId = 5,
                            CategoryId = 3,
                            Id = 1
                        },
                        new
                        {
                            AuthorId = 7,
                            CategoryId = 19,
                            Id = 2
                        },
                        new
                        {
                            AuthorId = 17,
                            CategoryId = 20,
                            Id = 3
                        },
                        new
                        {
                            AuthorId = 20,
                            CategoryId = 4,
                            Id = 4
                        },
                        new
                        {
                            AuthorId = 8,
                            CategoryId = 6,
                            Id = 5
                        },
                        new
                        {
                            AuthorId = 7,
                            CategoryId = 6,
                            Id = 6
                        },
                        new
                        {
                            AuthorId = 16,
                            CategoryId = 2,
                            Id = 7
                        },
                        new
                        {
                            AuthorId = 17,
                            CategoryId = 1,
                            Id = 8
                        },
                        new
                        {
                            AuthorId = 18,
                            CategoryId = 19,
                            Id = 9
                        },
                        new
                        {
                            AuthorId = 18,
                            CategoryId = 1,
                            Id = 10
                        },
                        new
                        {
                            AuthorId = 10,
                            CategoryId = 18,
                            Id = 11
                        },
                        new
                        {
                            AuthorId = 20,
                            CategoryId = 3,
                            Id = 12
                        },
                        new
                        {
                            AuthorId = 15,
                            CategoryId = 10,
                            Id = 13
                        },
                        new
                        {
                            AuthorId = 9,
                            CategoryId = 3,
                            Id = 14
                        },
                        new
                        {
                            AuthorId = 17,
                            CategoryId = 17,
                            Id = 15
                        },
                        new
                        {
                            AuthorId = 16,
                            CategoryId = 13,
                            Id = 16
                        },
                        new
                        {
                            AuthorId = 19,
                            CategoryId = 11,
                            Id = 17
                        },
                        new
                        {
                            AuthorId = 10,
                            CategoryId = 15,
                            Id = 18
                        },
                        new
                        {
                            AuthorId = 11,
                            CategoryId = 11,
                            Id = 19
                        },
                        new
                        {
                            AuthorId = 7,
                            CategoryId = 3,
                            Id = 20
                        },
                        new
                        {
                            AuthorId = 19,
                            CategoryId = 4,
                            Id = 21
                        },
                        new
                        {
                            AuthorId = 2,
                            CategoryId = 12,
                            Id = 22
                        },
                        new
                        {
                            AuthorId = 17,
                            CategoryId = 5,
                            Id = 23
                        },
                        new
                        {
                            AuthorId = 5,
                            CategoryId = 9,
                            Id = 24
                        },
                        new
                        {
                            AuthorId = 16,
                            CategoryId = 19,
                            Id = 25
                        },
                        new
                        {
                            AuthorId = 15,
                            CategoryId = 7,
                            Id = 26
                        },
                        new
                        {
                            AuthorId = 6,
                            CategoryId = 18,
                            Id = 27
                        },
                        new
                        {
                            AuthorId = 19,
                            CategoryId = 7,
                            Id = 28
                        },
                        new
                        {
                            AuthorId = 4,
                            CategoryId = 5,
                            Id = 29
                        },
                        new
                        {
                            AuthorId = 4,
                            CategoryId = 8,
                            Id = 30
                        },
                        new
                        {
                            AuthorId = 11,
                            CategoryId = 18,
                            Id = 31
                        },
                        new
                        {
                            AuthorId = 8,
                            CategoryId = 11,
                            Id = 32
                        },
                        new
                        {
                            AuthorId = 11,
                            CategoryId = 14,
                            Id = 33
                        },
                        new
                        {
                            AuthorId = 7,
                            CategoryId = 5,
                            Id = 34
                        },
                        new
                        {
                            AuthorId = 12,
                            CategoryId = 3,
                            Id = 35
                        },
                        new
                        {
                            AuthorId = 10,
                            CategoryId = 7,
                            Id = 36
                        },
                        new
                        {
                            AuthorId = 13,
                            CategoryId = 16,
                            Id = 37
                        },
                        new
                        {
                            AuthorId = 2,
                            CategoryId = 6,
                            Id = 38
                        },
                        new
                        {
                            AuthorId = 16,
                            CategoryId = 8,
                            Id = 39
                        },
                        new
                        {
                            AuthorId = 6,
                            CategoryId = 11,
                            Id = 40
                        },
                        new
                        {
                            AuthorId = 5,
                            CategoryId = 1,
                            Id = 41
                        },
                        new
                        {
                            AuthorId = 3,
                            CategoryId = 10,
                            Id = 43
                        },
                        new
                        {
                            AuthorId = 7,
                            CategoryId = 2,
                            Id = 44
                        },
                        new
                        {
                            AuthorId = 13,
                            CategoryId = 3,
                            Id = 45
                        },
                        new
                        {
                            AuthorId = 11,
                            CategoryId = 7,
                            Id = 46
                        },
                        new
                        {
                            AuthorId = 12,
                            CategoryId = 2,
                            Id = 48
                        },
                        new
                        {
                            AuthorId = 17,
                            CategoryId = 11,
                            Id = 49
                        },
                        new
                        {
                            AuthorId = 2,
                            CategoryId = 3,
                            Id = 50
                        });
                });

            modelBuilder.Entity("MoonReads.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Isbn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Pages")
                        .HasColumnType("integer");

                    b.Property<bool>("Pending")
                        .HasColumnType("boolean");

                    b.Property<int>("PublisherId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            ImageUrl = "https://picsum.photos/350/500/?image=466",
                            Isbn = "6030298605",
                            Pages = 348,
                            Pending = false,
                            PublisherId = 18,
                            ReleaseDate = new DateOnly(2023, 2, 12),
                            Title = "Ergonomic Fresh Towels"
                        },
                        new
                        {
                            Id = 2,
                            Description = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            ImageUrl = "https://picsum.photos/350/500/?image=919",
                            Isbn = "1514012349",
                            Pages = 482,
                            Pending = false,
                            PublisherId = 7,
                            ReleaseDate = new DateOnly(2023, 10, 7),
                            Title = "Generic Cotton Chips"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            ImageUrl = "https://picsum.photos/350/500/?image=723",
                            Isbn = "1765247628",
                            Pages = 875,
                            Pending = false,
                            PublisherId = 11,
                            ReleaseDate = new DateOnly(2023, 2, 24),
                            Title = "Fantastic Concrete Table"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            ImageUrl = "https://picsum.photos/350/500/?image=1051",
                            Isbn = "7569506372",
                            Pages = 439,
                            Pending = false,
                            PublisherId = 8,
                            ReleaseDate = new DateOnly(2023, 2, 6),
                            Title = "Tasty Cotton Table"
                        },
                        new
                        {
                            Id = 5,
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            ImageUrl = "https://picsum.photos/350/500/?image=56",
                            Isbn = "6098951446",
                            Pages = 452,
                            Pending = false,
                            PublisherId = 9,
                            ReleaseDate = new DateOnly(2023, 11, 11),
                            Title = "Tasty Fresh Bike"
                        },
                        new
                        {
                            Id = 6,
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            ImageUrl = "https://picsum.photos/350/500/?image=625",
                            Isbn = "1073590732",
                            Pages = 534,
                            Pending = false,
                            PublisherId = 8,
                            ReleaseDate = new DateOnly(2023, 2, 25),
                            Title = "Handmade Concrete Salad"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            ImageUrl = "https://picsum.photos/350/500/?image=414",
                            Isbn = "1092020648",
                            Pages = 249,
                            Pending = false,
                            PublisherId = 5,
                            ReleaseDate = new DateOnly(2023, 8, 14),
                            Title = "Practical Wooden Ball"
                        },
                        new
                        {
                            Id = 8,
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            ImageUrl = "https://picsum.photos/350/500/?image=547",
                            Isbn = "7428364844",
                            Pages = 455,
                            Pending = false,
                            PublisherId = 15,
                            ReleaseDate = new DateOnly(2023, 7, 6),
                            Title = "Ergonomic Metal Soap"
                        },
                        new
                        {
                            Id = 9,
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            ImageUrl = "https://picsum.photos/350/500/?image=240",
                            Isbn = "9949631255",
                            Pages = 121,
                            Pending = false,
                            PublisherId = 20,
                            ReleaseDate = new DateOnly(2023, 4, 28),
                            Title = "Handmade Fresh Bacon"
                        },
                        new
                        {
                            Id = 10,
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            ImageUrl = "https://picsum.photos/350/500/?image=341",
                            Isbn = "9273179588",
                            Pages = 619,
                            Pending = false,
                            PublisherId = 20,
                            ReleaseDate = new DateOnly(2023, 4, 2),
                            Title = "Gorgeous Metal Sausages"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            ImageUrl = "https://picsum.photos/350/500/?image=520",
                            Isbn = "2669592026",
                            Pages = 719,
                            Pending = false,
                            PublisherId = 15,
                            ReleaseDate = new DateOnly(2023, 9, 27),
                            Title = "Awesome Plastic Bike"
                        },
                        new
                        {
                            Id = 12,
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            ImageUrl = "https://picsum.photos/350/500/?image=974",
                            Isbn = "5591813704",
                            Pages = 287,
                            Pending = false,
                            PublisherId = 14,
                            ReleaseDate = new DateOnly(2023, 10, 31),
                            Title = "Intelligent Wooden Keyboard"
                        },
                        new
                        {
                            Id = 13,
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            ImageUrl = "https://picsum.photos/350/500/?image=102",
                            Isbn = "5316171938",
                            Pages = 648,
                            Pending = false,
                            PublisherId = 19,
                            ReleaseDate = new DateOnly(2023, 7, 31),
                            Title = "Small Concrete Shoes"
                        },
                        new
                        {
                            Id = 14,
                            Description = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            ImageUrl = "https://picsum.photos/350/500/?image=123",
                            Isbn = "7631378459",
                            Pages = 520,
                            Pending = false,
                            PublisherId = 9,
                            ReleaseDate = new DateOnly(2023, 10, 4),
                            Title = "Incredible Plastic Shoes"
                        },
                        new
                        {
                            Id = 15,
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            ImageUrl = "https://picsum.photos/350/500/?image=74",
                            Isbn = "5216664203",
                            Pages = 476,
                            Pending = false,
                            PublisherId = 8,
                            ReleaseDate = new DateOnly(2023, 3, 25),
                            Title = "Tasty Soft Towels"
                        },
                        new
                        {
                            Id = 16,
                            Description = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            ImageUrl = "https://picsum.photos/350/500/?image=893",
                            Isbn = "4859256632",
                            Pages = 353,
                            Pending = false,
                            PublisherId = 12,
                            ReleaseDate = new DateOnly(2023, 5, 5),
                            Title = "Generic Soft Table"
                        },
                        new
                        {
                            Id = 17,
                            Description = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            ImageUrl = "https://picsum.photos/350/500/?image=49",
                            Isbn = "5604270359",
                            Pages = 242,
                            Pending = false,
                            PublisherId = 6,
                            ReleaseDate = new DateOnly(2023, 5, 10),
                            Title = "Tasty Wooden Pizza"
                        },
                        new
                        {
                            Id = 18,
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            ImageUrl = "https://picsum.photos/350/500/?image=194",
                            Isbn = "4253805954",
                            Pages = 829,
                            Pending = false,
                            PublisherId = 18,
                            ReleaseDate = new DateOnly(2023, 2, 4),
                            Title = "Small Frozen Sausages"
                        },
                        new
                        {
                            Id = 19,
                            Description = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            ImageUrl = "https://picsum.photos/350/500/?image=1035",
                            Isbn = "3626200130",
                            Pages = 811,
                            Pending = false,
                            PublisherId = 19,
                            ReleaseDate = new DateOnly(2023, 11, 23),
                            Title = "Small Granite Mouse"
                        },
                        new
                        {
                            Id = 20,
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            ImageUrl = "https://picsum.photos/350/500/?image=223",
                            Isbn = "1083828989",
                            Pages = 590,
                            Pending = false,
                            PublisherId = 3,
                            ReleaseDate = new DateOnly(2023, 3, 24),
                            Title = "Handmade Wooden Shoes"
                        },
                        new
                        {
                            Id = 21,
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            ImageUrl = "https://picsum.photos/350/500/?image=17",
                            Isbn = "8085228730",
                            Pages = 234,
                            Pending = false,
                            PublisherId = 9,
                            ReleaseDate = new DateOnly(2023, 6, 18),
                            Title = "Practical Fresh Soap"
                        },
                        new
                        {
                            Id = 22,
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            ImageUrl = "https://picsum.photos/350/500/?image=581",
                            Isbn = "7814881124",
                            Pages = 543,
                            Pending = false,
                            PublisherId = 19,
                            ReleaseDate = new DateOnly(2023, 5, 28),
                            Title = "Unbranded Cotton Car"
                        },
                        new
                        {
                            Id = 23,
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            ImageUrl = "https://picsum.photos/350/500/?image=540",
                            Isbn = "6468451297",
                            Pages = 385,
                            Pending = false,
                            PublisherId = 19,
                            ReleaseDate = new DateOnly(2023, 9, 4),
                            Title = "Tasty Metal Chips"
                        },
                        new
                        {
                            Id = 24,
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            ImageUrl = "https://picsum.photos/350/500/?image=460",
                            Isbn = "8419990175",
                            Pages = 884,
                            Pending = false,
                            PublisherId = 6,
                            ReleaseDate = new DateOnly(2023, 3, 28),
                            Title = "Fantastic Metal Bike"
                        },
                        new
                        {
                            Id = 25,
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            ImageUrl = "https://picsum.photos/350/500/?image=909",
                            Isbn = "1345479458",
                            Pages = 416,
                            Pending = false,
                            PublisherId = 11,
                            ReleaseDate = new DateOnly(2023, 6, 11),
                            Title = "Licensed Plastic Ball"
                        },
                        new
                        {
                            Id = 26,
                            Description = "The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design",
                            ImageUrl = "https://picsum.photos/350/500/?image=516",
                            Isbn = "3387416626",
                            Pages = 205,
                            Pending = false,
                            PublisherId = 1,
                            ReleaseDate = new DateOnly(2023, 7, 24),
                            Title = "Gorgeous Metal Shoes"
                        },
                        new
                        {
                            Id = 27,
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            ImageUrl = "https://picsum.photos/350/500/?image=340",
                            Isbn = "4257881849",
                            Pages = 747,
                            Pending = false,
                            PublisherId = 2,
                            ReleaseDate = new DateOnly(2023, 6, 15),
                            Title = "Small Metal Tuna"
                        },
                        new
                        {
                            Id = 28,
                            Description = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            ImageUrl = "https://picsum.photos/350/500/?image=587",
                            Isbn = "6622099832",
                            Pages = 118,
                            Pending = false,
                            PublisherId = 10,
                            ReleaseDate = new DateOnly(2023, 12, 4),
                            Title = "Generic Cotton Salad"
                        },
                        new
                        {
                            Id = 29,
                            Description = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            ImageUrl = "https://picsum.photos/350/500/?image=1006",
                            Isbn = "3553060187",
                            Pages = 177,
                            Pending = false,
                            PublisherId = 5,
                            ReleaseDate = new DateOnly(2023, 8, 19),
                            Title = "Unbranded Soft Tuna"
                        },
                        new
                        {
                            Id = 30,
                            Description = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            ImageUrl = "https://picsum.photos/350/500/?image=862",
                            Isbn = "5027154350",
                            Pages = 190,
                            Pending = false,
                            PublisherId = 13,
                            ReleaseDate = new DateOnly(2023, 2, 22),
                            Title = "Refined Rubber Sausages"
                        },
                        new
                        {
                            Id = 31,
                            Description = "The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design",
                            ImageUrl = "https://picsum.photos/350/500/?image=962",
                            Isbn = "2258455548",
                            Pages = 652,
                            Pending = false,
                            PublisherId = 3,
                            ReleaseDate = new DateOnly(2023, 9, 26),
                            Title = "Incredible Plastic Tuna"
                        },
                        new
                        {
                            Id = 32,
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            ImageUrl = "https://picsum.photos/350/500/?image=895",
                            Isbn = "7841428666",
                            Pages = 714,
                            Pending = false,
                            PublisherId = 6,
                            ReleaseDate = new DateOnly(2023, 3, 10),
                            Title = "Handcrafted Rubber Ball"
                        },
                        new
                        {
                            Id = 33,
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            ImageUrl = "https://picsum.photos/350/500/?image=381",
                            Isbn = "8360017949",
                            Pages = 881,
                            Pending = false,
                            PublisherId = 17,
                            ReleaseDate = new DateOnly(2023, 12, 13),
                            Title = "Fantastic Frozen Pants"
                        },
                        new
                        {
                            Id = 34,
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            ImageUrl = "https://picsum.photos/350/500/?image=625",
                            Isbn = "3086704550",
                            Pages = 495,
                            Pending = false,
                            PublisherId = 16,
                            ReleaseDate = new DateOnly(2023, 5, 9),
                            Title = "Refined Rubber Pizza"
                        },
                        new
                        {
                            Id = 35,
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            ImageUrl = "https://picsum.photos/350/500/?image=253",
                            Isbn = "5471498158",
                            Pages = 623,
                            Pending = false,
                            PublisherId = 7,
                            ReleaseDate = new DateOnly(2023, 3, 20),
                            Title = "Handcrafted Frozen Bacon"
                        },
                        new
                        {
                            Id = 36,
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            ImageUrl = "https://picsum.photos/350/500/?image=752",
                            Isbn = "5509140806",
                            Pages = 630,
                            Pending = false,
                            PublisherId = 6,
                            ReleaseDate = new DateOnly(2023, 1, 12),
                            Title = "Fantastic Wooden Pants"
                        },
                        new
                        {
                            Id = 37,
                            Description = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            ImageUrl = "https://picsum.photos/350/500/?image=201",
                            Isbn = "2677045551",
                            Pages = 548,
                            Pending = false,
                            PublisherId = 4,
                            ReleaseDate = new DateOnly(2023, 4, 22),
                            Title = "Handmade Frozen Chair"
                        },
                        new
                        {
                            Id = 38,
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            ImageUrl = "https://picsum.photos/350/500/?image=271",
                            Isbn = "3613177107",
                            Pages = 585,
                            Pending = false,
                            PublisherId = 4,
                            ReleaseDate = new DateOnly(2023, 5, 9),
                            Title = "Rustic Wooden Hat"
                        },
                        new
                        {
                            Id = 39,
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            ImageUrl = "https://picsum.photos/350/500/?image=1017",
                            Isbn = "4522412013",
                            Pages = 707,
                            Pending = false,
                            PublisherId = 9,
                            ReleaseDate = new DateOnly(2023, 12, 2),
                            Title = "Refined Wooden Table"
                        },
                        new
                        {
                            Id = 40,
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            ImageUrl = "https://picsum.photos/350/500/?image=111",
                            Isbn = "9512215388",
                            Pages = 691,
                            Pending = false,
                            PublisherId = 15,
                            ReleaseDate = new DateOnly(2023, 2, 11),
                            Title = "Handmade Concrete Tuna"
                        },
                        new
                        {
                            Id = 41,
                            Description = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            ImageUrl = "https://picsum.photos/350/500/?image=1061",
                            Isbn = "7370871067",
                            Pages = 144,
                            Pending = false,
                            PublisherId = 6,
                            ReleaseDate = new DateOnly(2023, 9, 15),
                            Title = "Handmade Frozen Towels"
                        },
                        new
                        {
                            Id = 42,
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            ImageUrl = "https://picsum.photos/350/500/?image=571",
                            Isbn = "8499552444",
                            Pages = 556,
                            Pending = false,
                            PublisherId = 3,
                            ReleaseDate = new DateOnly(2023, 9, 3),
                            Title = "Small Wooden Shirt"
                        },
                        new
                        {
                            Id = 43,
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            ImageUrl = "https://picsum.photos/350/500/?image=1053",
                            Isbn = "3716152315",
                            Pages = 835,
                            Pending = false,
                            PublisherId = 4,
                            ReleaseDate = new DateOnly(2023, 1, 11),
                            Title = "Handmade Granite Ball"
                        },
                        new
                        {
                            Id = 44,
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            ImageUrl = "https://picsum.photos/350/500/?image=828",
                            Isbn = "2119415494",
                            Pages = 398,
                            Pending = false,
                            PublisherId = 9,
                            ReleaseDate = new DateOnly(2023, 4, 14),
                            Title = "Rustic Plastic Car"
                        },
                        new
                        {
                            Id = 45,
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            ImageUrl = "https://picsum.photos/350/500/?image=56",
                            Isbn = "3484624791",
                            Pages = 207,
                            Pending = false,
                            PublisherId = 3,
                            ReleaseDate = new DateOnly(2023, 6, 23),
                            Title = "Gorgeous Granite Keyboard"
                        },
                        new
                        {
                            Id = 46,
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            ImageUrl = "https://picsum.photos/350/500/?image=1073",
                            Isbn = "2841467811",
                            Pages = 574,
                            Pending = false,
                            PublisherId = 10,
                            ReleaseDate = new DateOnly(2023, 1, 26),
                            Title = "Fantastic Concrete Pants"
                        },
                        new
                        {
                            Id = 47,
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            ImageUrl = "https://picsum.photos/350/500/?image=297",
                            Isbn = "3474679719",
                            Pages = 144,
                            Pending = false,
                            PublisherId = 19,
                            ReleaseDate = new DateOnly(2023, 1, 19),
                            Title = "Generic Rubber Mouse"
                        },
                        new
                        {
                            Id = 48,
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            ImageUrl = "https://picsum.photos/350/500/?image=785",
                            Isbn = "6194044358",
                            Pages = 440,
                            Pending = false,
                            PublisherId = 16,
                            ReleaseDate = new DateOnly(2023, 7, 18),
                            Title = "Tasty Rubber Cheese"
                        },
                        new
                        {
                            Id = 49,
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            ImageUrl = "https://picsum.photos/350/500/?image=951",
                            Isbn = "3429046523",
                            Pages = 565,
                            Pending = false,
                            PublisherId = 4,
                            ReleaseDate = new DateOnly(2022, 12, 30),
                            Title = "Awesome Plastic Ball"
                        },
                        new
                        {
                            Id = 50,
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            ImageUrl = "https://picsum.photos/350/500/?image=356",
                            Isbn = "8553736980",
                            Pages = 880,
                            Pending = false,
                            PublisherId = 2,
                            ReleaseDate = new DateOnly(2023, 11, 23),
                            Title = "Generic Wooden Sausages"
                        });
                });

            modelBuilder.Entity("MoonReads.Models.BookAuthor", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.HasKey("BookId", "AuthorId");

                    b.HasIndex("AuthorId");

                    b.ToTable("BookAuthors");

                    b.HasData(
                        new
                        {
                            BookId = 8,
                            AuthorId = 18,
                            Id = 1
                        },
                        new
                        {
                            BookId = 26,
                            AuthorId = 14,
                            Id = 2
                        },
                        new
                        {
                            BookId = 2,
                            AuthorId = 2,
                            Id = 3
                        },
                        new
                        {
                            BookId = 21,
                            AuthorId = 11,
                            Id = 4
                        },
                        new
                        {
                            BookId = 19,
                            AuthorId = 6,
                            Id = 5
                        },
                        new
                        {
                            BookId = 35,
                            AuthorId = 18,
                            Id = 6
                        },
                        new
                        {
                            BookId = 36,
                            AuthorId = 6,
                            Id = 7
                        },
                        new
                        {
                            BookId = 42,
                            AuthorId = 13,
                            Id = 8
                        },
                        new
                        {
                            BookId = 9,
                            AuthorId = 19,
                            Id = 9
                        },
                        new
                        {
                            BookId = 27,
                            AuthorId = 16,
                            Id = 10
                        },
                        new
                        {
                            BookId = 39,
                            AuthorId = 3,
                            Id = 11
                        },
                        new
                        {
                            BookId = 8,
                            AuthorId = 12,
                            Id = 12
                        },
                        new
                        {
                            BookId = 7,
                            AuthorId = 1,
                            Id = 13
                        },
                        new
                        {
                            BookId = 13,
                            AuthorId = 16,
                            Id = 14
                        },
                        new
                        {
                            BookId = 41,
                            AuthorId = 3,
                            Id = 15
                        },
                        new
                        {
                            BookId = 6,
                            AuthorId = 8,
                            Id = 16
                        },
                        new
                        {
                            BookId = 32,
                            AuthorId = 12,
                            Id = 17
                        },
                        new
                        {
                            BookId = 42,
                            AuthorId = 8,
                            Id = 18
                        },
                        new
                        {
                            BookId = 11,
                            AuthorId = 15,
                            Id = 19
                        },
                        new
                        {
                            BookId = 16,
                            AuthorId = 8,
                            Id = 20
                        },
                        new
                        {
                            BookId = 4,
                            AuthorId = 9,
                            Id = 21
                        },
                        new
                        {
                            BookId = 40,
                            AuthorId = 3,
                            Id = 22
                        },
                        new
                        {
                            BookId = 31,
                            AuthorId = 15,
                            Id = 23
                        },
                        new
                        {
                            BookId = 20,
                            AuthorId = 19,
                            Id = 24
                        },
                        new
                        {
                            BookId = 46,
                            AuthorId = 14,
                            Id = 25
                        },
                        new
                        {
                            BookId = 36,
                            AuthorId = 18,
                            Id = 27
                        },
                        new
                        {
                            BookId = 5,
                            AuthorId = 1,
                            Id = 28
                        },
                        new
                        {
                            BookId = 35,
                            AuthorId = 19,
                            Id = 29
                        },
                        new
                        {
                            BookId = 28,
                            AuthorId = 1,
                            Id = 30
                        },
                        new
                        {
                            BookId = 37,
                            AuthorId = 5,
                            Id = 32
                        },
                        new
                        {
                            BookId = 9,
                            AuthorId = 7,
                            Id = 33
                        },
                        new
                        {
                            BookId = 11,
                            AuthorId = 4,
                            Id = 34
                        },
                        new
                        {
                            BookId = 21,
                            AuthorId = 9,
                            Id = 35
                        },
                        new
                        {
                            BookId = 32,
                            AuthorId = 4,
                            Id = 37
                        },
                        new
                        {
                            BookId = 36,
                            AuthorId = 7,
                            Id = 38
                        },
                        new
                        {
                            BookId = 17,
                            AuthorId = 2,
                            Id = 39
                        },
                        new
                        {
                            BookId = 49,
                            AuthorId = 9,
                            Id = 40
                        },
                        new
                        {
                            BookId = 31,
                            AuthorId = 7,
                            Id = 41
                        },
                        new
                        {
                            BookId = 44,
                            AuthorId = 3,
                            Id = 42
                        },
                        new
                        {
                            BookId = 23,
                            AuthorId = 6,
                            Id = 43
                        },
                        new
                        {
                            BookId = 33,
                            AuthorId = 16,
                            Id = 44
                        },
                        new
                        {
                            BookId = 24,
                            AuthorId = 17,
                            Id = 45
                        },
                        new
                        {
                            BookId = 34,
                            AuthorId = 6,
                            Id = 46
                        },
                        new
                        {
                            BookId = 10,
                            AuthorId = 6,
                            Id = 47
                        },
                        new
                        {
                            BookId = 27,
                            AuthorId = 10,
                            Id = 48
                        },
                        new
                        {
                            BookId = 35,
                            AuthorId = 12,
                            Id = 49
                        },
                        new
                        {
                            BookId = 47,
                            AuthorId = 6,
                            Id = 50
                        },
                        new
                        {
                            BookId = 26,
                            AuthorId = 5,
                            Id = 51
                        },
                        new
                        {
                            BookId = 26,
                            AuthorId = 10,
                            Id = 52
                        },
                        new
                        {
                            BookId = 13,
                            AuthorId = 6,
                            Id = 53
                        },
                        new
                        {
                            BookId = 13,
                            AuthorId = 11,
                            Id = 54
                        },
                        new
                        {
                            BookId = 8,
                            AuthorId = 15,
                            Id = 55
                        },
                        new
                        {
                            BookId = 35,
                            AuthorId = 13,
                            Id = 56
                        },
                        new
                        {
                            BookId = 48,
                            AuthorId = 3,
                            Id = 57
                        },
                        new
                        {
                            BookId = 38,
                            AuthorId = 12,
                            Id = 59
                        },
                        new
                        {
                            BookId = 39,
                            AuthorId = 19,
                            Id = 60
                        },
                        new
                        {
                            BookId = 34,
                            AuthorId = 9,
                            Id = 61
                        },
                        new
                        {
                            BookId = 34,
                            AuthorId = 12,
                            Id = 62
                        },
                        new
                        {
                            BookId = 12,
                            AuthorId = 7,
                            Id = 64
                        },
                        new
                        {
                            BookId = 33,
                            AuthorId = 5,
                            Id = 65
                        },
                        new
                        {
                            BookId = 32,
                            AuthorId = 16,
                            Id = 66
                        },
                        new
                        {
                            BookId = 7,
                            AuthorId = 14,
                            Id = 67
                        },
                        new
                        {
                            BookId = 46,
                            AuthorId = 8,
                            Id = 68
                        },
                        new
                        {
                            BookId = 40,
                            AuthorId = 8,
                            Id = 69
                        },
                        new
                        {
                            BookId = 45,
                            AuthorId = 4,
                            Id = 70
                        },
                        new
                        {
                            BookId = 1,
                            AuthorId = 3,
                            Id = 71
                        },
                        new
                        {
                            BookId = 32,
                            AuthorId = 15,
                            Id = 72
                        },
                        new
                        {
                            BookId = 8,
                            AuthorId = 1,
                            Id = 73
                        },
                        new
                        {
                            BookId = 18,
                            AuthorId = 2,
                            Id = 74
                        },
                        new
                        {
                            BookId = 45,
                            AuthorId = 1,
                            Id = 75
                        });
                });

            modelBuilder.Entity("MoonReads.Models.BookCategory", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.HasKey("BookId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("BookCategories");

                    b.HasData(
                        new
                        {
                            BookId = 33,
                            CategoryId = 8,
                            Id = 1
                        },
                        new
                        {
                            BookId = 7,
                            CategoryId = 20,
                            Id = 2
                        },
                        new
                        {
                            BookId = 5,
                            CategoryId = 18,
                            Id = 3
                        },
                        new
                        {
                            BookId = 28,
                            CategoryId = 11,
                            Id = 4
                        },
                        new
                        {
                            BookId = 32,
                            CategoryId = 4,
                            Id = 5
                        },
                        new
                        {
                            BookId = 24,
                            CategoryId = 14,
                            Id = 6
                        },
                        new
                        {
                            BookId = 30,
                            CategoryId = 17,
                            Id = 7
                        },
                        new
                        {
                            BookId = 22,
                            CategoryId = 18,
                            Id = 8
                        },
                        new
                        {
                            BookId = 47,
                            CategoryId = 6,
                            Id = 9
                        },
                        new
                        {
                            BookId = 42,
                            CategoryId = 15,
                            Id = 11
                        },
                        new
                        {
                            BookId = 50,
                            CategoryId = 18,
                            Id = 13
                        },
                        new
                        {
                            BookId = 17,
                            CategoryId = 4,
                            Id = 14
                        },
                        new
                        {
                            BookId = 37,
                            CategoryId = 9,
                            Id = 15
                        },
                        new
                        {
                            BookId = 50,
                            CategoryId = 12,
                            Id = 16
                        },
                        new
                        {
                            BookId = 40,
                            CategoryId = 1,
                            Id = 17
                        },
                        new
                        {
                            BookId = 8,
                            CategoryId = 9,
                            Id = 18
                        },
                        new
                        {
                            BookId = 50,
                            CategoryId = 16,
                            Id = 19
                        },
                        new
                        {
                            BookId = 28,
                            CategoryId = 18,
                            Id = 20
                        },
                        new
                        {
                            BookId = 10,
                            CategoryId = 7,
                            Id = 21
                        },
                        new
                        {
                            BookId = 11,
                            CategoryId = 13,
                            Id = 22
                        },
                        new
                        {
                            BookId = 1,
                            CategoryId = 7,
                            Id = 23
                        },
                        new
                        {
                            BookId = 46,
                            CategoryId = 12,
                            Id = 24
                        },
                        new
                        {
                            BookId = 39,
                            CategoryId = 16,
                            Id = 25
                        },
                        new
                        {
                            BookId = 36,
                            CategoryId = 8,
                            Id = 27
                        },
                        new
                        {
                            BookId = 35,
                            CategoryId = 19,
                            Id = 28
                        },
                        new
                        {
                            BookId = 49,
                            CategoryId = 5,
                            Id = 29
                        },
                        new
                        {
                            BookId = 1,
                            CategoryId = 5,
                            Id = 30
                        },
                        new
                        {
                            BookId = 26,
                            CategoryId = 8,
                            Id = 31
                        },
                        new
                        {
                            BookId = 39,
                            CategoryId = 5,
                            Id = 32
                        },
                        new
                        {
                            BookId = 10,
                            CategoryId = 19,
                            Id = 33
                        },
                        new
                        {
                            BookId = 45,
                            CategoryId = 12,
                            Id = 34
                        },
                        new
                        {
                            BookId = 33,
                            CategoryId = 20,
                            Id = 35
                        },
                        new
                        {
                            BookId = 46,
                            CategoryId = 4,
                            Id = 36
                        },
                        new
                        {
                            BookId = 38,
                            CategoryId = 2,
                            Id = 37
                        },
                        new
                        {
                            BookId = 4,
                            CategoryId = 11,
                            Id = 38
                        },
                        new
                        {
                            BookId = 27,
                            CategoryId = 17,
                            Id = 39
                        },
                        new
                        {
                            BookId = 45,
                            CategoryId = 13,
                            Id = 40
                        },
                        new
                        {
                            BookId = 48,
                            CategoryId = 15,
                            Id = 41
                        },
                        new
                        {
                            BookId = 20,
                            CategoryId = 20,
                            Id = 42
                        },
                        new
                        {
                            BookId = 15,
                            CategoryId = 1,
                            Id = 43
                        },
                        new
                        {
                            BookId = 43,
                            CategoryId = 9,
                            Id = 44
                        },
                        new
                        {
                            BookId = 17,
                            CategoryId = 5,
                            Id = 45
                        },
                        new
                        {
                            BookId = 24,
                            CategoryId = 16,
                            Id = 46
                        },
                        new
                        {
                            BookId = 38,
                            CategoryId = 7,
                            Id = 47
                        },
                        new
                        {
                            BookId = 18,
                            CategoryId = 16,
                            Id = 48
                        },
                        new
                        {
                            BookId = 28,
                            CategoryId = 20,
                            Id = 49
                        },
                        new
                        {
                            BookId = 22,
                            CategoryId = 2,
                            Id = 50
                        },
                        new
                        {
                            BookId = 23,
                            CategoryId = 7,
                            Id = 51
                        },
                        new
                        {
                            BookId = 47,
                            CategoryId = 16,
                            Id = 52
                        },
                        new
                        {
                            BookId = 43,
                            CategoryId = 20,
                            Id = 53
                        },
                        new
                        {
                            BookId = 10,
                            CategoryId = 13,
                            Id = 54
                        },
                        new
                        {
                            BookId = 15,
                            CategoryId = 4,
                            Id = 55
                        },
                        new
                        {
                            BookId = 20,
                            CategoryId = 3,
                            Id = 56
                        },
                        new
                        {
                            BookId = 18,
                            CategoryId = 8,
                            Id = 57
                        },
                        new
                        {
                            BookId = 15,
                            CategoryId = 16,
                            Id = 58
                        },
                        new
                        {
                            BookId = 47,
                            CategoryId = 3,
                            Id = 60
                        },
                        new
                        {
                            BookId = 4,
                            CategoryId = 10,
                            Id = 61
                        },
                        new
                        {
                            BookId = 13,
                            CategoryId = 9,
                            Id = 62
                        },
                        new
                        {
                            BookId = 27,
                            CategoryId = 3,
                            Id = 63
                        },
                        new
                        {
                            BookId = 22,
                            CategoryId = 10,
                            Id = 64
                        },
                        new
                        {
                            BookId = 37,
                            CategoryId = 6,
                            Id = 65
                        },
                        new
                        {
                            BookId = 49,
                            CategoryId = 11,
                            Id = 66
                        },
                        new
                        {
                            BookId = 20,
                            CategoryId = 16,
                            Id = 67
                        },
                        new
                        {
                            BookId = 9,
                            CategoryId = 13,
                            Id = 68
                        },
                        new
                        {
                            BookId = 41,
                            CategoryId = 13,
                            Id = 69
                        },
                        new
                        {
                            BookId = 7,
                            CategoryId = 7,
                            Id = 70
                        },
                        new
                        {
                            BookId = 43,
                            CategoryId = 5,
                            Id = 71
                        },
                        new
                        {
                            BookId = 6,
                            CategoryId = 4,
                            Id = 72
                        },
                        new
                        {
                            BookId = 43,
                            CategoryId = 7,
                            Id = 73
                        },
                        new
                        {
                            BookId = 22,
                            CategoryId = 8,
                            Id = 74
                        },
                        new
                        {
                            BookId = 1,
                            CategoryId = 12,
                            Id = 75
                        });
                });

            modelBuilder.Entity("MoonReads.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Industrial, Jewelery & Grocery"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Jewelery & Sports"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Computers"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Sports"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Clothing, Electronics & Industrial"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Shoes"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Clothing & Beauty"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Kids & Kids"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Sports & Tools"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Home & Games"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Shoes, Toys & Books"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Jewelery & Outdoors"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Toys & Health"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Music"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Home & Outdoors"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Industrial, Electronics & Grocery"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Garden"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Computers"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Garden, Books & Jewelery"
                        });
                });

            modelBuilder.Entity("MoonReads.Models.DataVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Table")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Version")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("DataVersions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Table = "Authors",
                            Version = 0
                        },
                        new
                        {
                            Id = 2,
                            Table = "Books",
                            Version = 0
                        },
                        new
                        {
                            Id = 3,
                            Table = "Categories",
                            Version = 0
                        },
                        new
                        {
                            Id = 4,
                            Table = "Publishers",
                            Version = 0
                        },
                        new
                        {
                            Id = 5,
                            Table = "AuthorCategories",
                            Version = 0
                        },
                        new
                        {
                            Id = 6,
                            Table = "BookAuthors",
                            Version = 0
                        },
                        new
                        {
                            Id = 7,
                            Table = "BookCategories",
                            Version = 0
                        },
                        new
                        {
                            Id = 8,
                            Table = "Ratings",
                            Version = 0
                        },
                        new
                        {
                            Id = 9,
                            Table = "Reviews",
                            Version = 0
                        },
                        new
                        {
                            Id = 10,
                            Table = "ReviewRatings",
                            Version = 0
                        });
                });

            modelBuilder.Entity("MoonReads.Models.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            ImageUrl = "https://picsum.photos/350/500/?image=1039",
                            Name = "Prosacco - Kuvalis"
                        },
                        new
                        {
                            Id = 2,
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            ImageUrl = "https://picsum.photos/350/500/?image=521",
                            Name = "Collins - Wilkinson"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            ImageUrl = "https://picsum.photos/350/500/?image=546",
                            Name = "Bode, Kohler and Abernathy"
                        },
                        new
                        {
                            Id = 4,
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            ImageUrl = "https://picsum.photos/350/500/?image=84",
                            Name = "Murphy, Bahringer and Witting"
                        },
                        new
                        {
                            Id = 5,
                            Description = "The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design",
                            ImageUrl = "https://picsum.photos/350/500/?image=637",
                            Name = "Reinger - Armstrong"
                        },
                        new
                        {
                            Id = 6,
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            ImageUrl = "https://picsum.photos/350/500/?image=467",
                            Name = "Ruecker Group"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            ImageUrl = "https://picsum.photos/350/500/?image=755",
                            Name = "Carter Group"
                        },
                        new
                        {
                            Id = 8,
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            ImageUrl = "https://picsum.photos/350/500/?image=230",
                            Name = "Erdman LLC"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            ImageUrl = "https://picsum.photos/350/500/?image=677",
                            Name = "McDermott, Larkin and Langworth"
                        },
                        new
                        {
                            Id = 10,
                            Description = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            ImageUrl = "https://picsum.photos/350/500/?image=935",
                            Name = "Luettgen - Braun"
                        },
                        new
                        {
                            Id = 11,
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            ImageUrl = "https://picsum.photos/350/500/?image=202",
                            Name = "Torphy - Lehner"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            ImageUrl = "https://picsum.photos/350/500/?image=342",
                            Name = "Shanahan, Hahn and Cartwright"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            ImageUrl = "https://picsum.photos/350/500/?image=36",
                            Name = "Johns LLC"
                        },
                        new
                        {
                            Id = 14,
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            ImageUrl = "https://picsum.photos/350/500/?image=954",
                            Name = "Orn, Heller and Grady"
                        },
                        new
                        {
                            Id = 15,
                            Description = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            ImageUrl = "https://picsum.photos/350/500/?image=678",
                            Name = "Rempel - Fay"
                        },
                        new
                        {
                            Id = 16,
                            Description = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            ImageUrl = "https://picsum.photos/350/500/?image=431",
                            Name = "Kiehn and Sons"
                        },
                        new
                        {
                            Id = 17,
                            Description = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            ImageUrl = "https://picsum.photos/350/500/?image=250",
                            Name = "Stracke - Schimmel"
                        },
                        new
                        {
                            Id = 18,
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            ImageUrl = "https://picsum.photos/350/500/?image=625",
                            Name = "Adams - Collins"
                        },
                        new
                        {
                            Id = 19,
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            ImageUrl = "https://picsum.photos/350/500/?image=695",
                            Name = "Hickle - Hane"
                        },
                        new
                        {
                            Id = 20,
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            ImageUrl = "https://picsum.photos/350/500/?image=886",
                            Name = "Sauer - Willms"
                        });
                });

            modelBuilder.Entity("MoonReads.Models.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<int>("Rate")
                        .HasColumnType("integer");

                    b.Property<int?>("ReviewId")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("ReviewId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("MoonReads.Models.Reaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Like")
                        .HasColumnType("boolean");

                    b.Property<int?>("ReviewId")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ReviewId");

                    b.HasIndex("UserId");

                    b.ToTable("Reactions");
                });

            modelBuilder.Entity("MoonReads.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("MoonReads.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("Avatar")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("MoonReads.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("MoonReads.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoonReads.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("MoonReads.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MoonReads.Models.AuthorCategory", b =>
                {
                    b.HasOne("MoonReads.Models.Author", "Author")
                        .WithMany("AuthorCategories")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoonReads.Models.Category", "Category")
                        .WithMany("AuthorCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MoonReads.Models.Book", b =>
                {
                    b.HasOne("MoonReads.Models.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("MoonReads.Models.BookAuthor", b =>
                {
                    b.HasOne("MoonReads.Models.Author", "Author")
                        .WithMany("BookAuthors")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoonReads.Models.Book", "Book")
                        .WithMany("BookAuthors")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("MoonReads.Models.BookCategory", b =>
                {
                    b.HasOne("MoonReads.Models.Book", "Book")
                        .WithMany("BookCategories")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoonReads.Models.Category", "Category")
                        .WithMany("BookCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MoonReads.Models.Rating", b =>
                {
                    b.HasOne("MoonReads.Models.Book", "Book")
                        .WithMany("Rating")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoonReads.Models.Review", "Review")
                        .WithOne("Rating")
                        .HasForeignKey("MoonReads.Models.Rating", "ReviewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoonReads.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Review");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoonReads.Models.Reaction", b =>
                {
                    b.HasOne("MoonReads.Models.Review", "Review")
                        .WithMany("Reactions")
                        .HasForeignKey("ReviewId");

                    b.HasOne("MoonReads.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Review");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoonReads.Models.Author", b =>
                {
                    b.Navigation("AuthorCategories");

                    b.Navigation("BookAuthors");
                });

            modelBuilder.Entity("MoonReads.Models.Book", b =>
                {
                    b.Navigation("BookAuthors");

                    b.Navigation("BookCategories");

                    b.Navigation("Rating");
                });

            modelBuilder.Entity("MoonReads.Models.Category", b =>
                {
                    b.Navigation("AuthorCategories");

                    b.Navigation("BookCategories");
                });

            modelBuilder.Entity("MoonReads.Models.Publisher", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("MoonReads.Models.Review", b =>
                {
                    b.Navigation("Rating")
                        .IsRequired();

                    b.Navigation("Reactions");
                });
#pragma warning restore 612, 618
        }
    }
}
