// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoonReads.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MoonReads.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231226201427_AddBookshelf")]
    partial class AddBookshelf
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MoonReads.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            ImageUrl = "https://picsum.photos/350/500/?image=861",
                            Name = "Colt Okuneva"
                        },
                        new
                        {
                            Id = 2,
                            Description = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            ImageUrl = "https://picsum.photos/350/500/?image=315",
                            Name = "Fred Raynor"
                        },
                        new
                        {
                            Id = 3,
                            Description = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            ImageUrl = "https://picsum.photos/350/500/?image=674",
                            Name = "Maurice Rempel"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            ImageUrl = "https://picsum.photos/350/500/?image=657",
                            Name = "Leora Ullrich"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            ImageUrl = "https://picsum.photos/350/500/?image=136",
                            Name = "Brent Gleichner"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            ImageUrl = "https://picsum.photos/350/500/?image=679",
                            Name = "Dorthy Haag"
                        },
                        new
                        {
                            Id = 7,
                            Description = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            ImageUrl = "https://picsum.photos/350/500/?image=131",
                            Name = "Bradly Jacobi"
                        },
                        new
                        {
                            Id = 8,
                            Description = "The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design",
                            ImageUrl = "https://picsum.photos/350/500/?image=153",
                            Name = "Devante Bradtke"
                        },
                        new
                        {
                            Id = 9,
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            ImageUrl = "https://picsum.photos/350/500/?image=356",
                            Name = "Abdullah Homenick"
                        },
                        new
                        {
                            Id = 10,
                            Description = "The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design",
                            ImageUrl = "https://picsum.photos/350/500/?image=318",
                            Name = "Francesca Yundt"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            ImageUrl = "https://picsum.photos/350/500/?image=1015",
                            Name = "Hoyt Jacobson"
                        },
                        new
                        {
                            Id = 12,
                            Description = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            ImageUrl = "https://picsum.photos/350/500/?image=547",
                            Name = "Brandy Olson"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            ImageUrl = "https://picsum.photos/350/500/?image=133",
                            Name = "Tracy Roberts"
                        },
                        new
                        {
                            Id = 14,
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            ImageUrl = "https://picsum.photos/350/500/?image=605",
                            Name = "Bernard McGlynn"
                        },
                        new
                        {
                            Id = 15,
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            ImageUrl = "https://picsum.photos/350/500/?image=617",
                            Name = "Verdie Schroeder"
                        },
                        new
                        {
                            Id = 16,
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            ImageUrl = "https://picsum.photos/350/500/?image=605",
                            Name = "Antonette Bogan"
                        },
                        new
                        {
                            Id = 17,
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            ImageUrl = "https://picsum.photos/350/500/?image=805",
                            Name = "Trystan Leffler"
                        },
                        new
                        {
                            Id = 18,
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            ImageUrl = "https://picsum.photos/350/500/?image=23",
                            Name = "Theresa DuBuque"
                        },
                        new
                        {
                            Id = 19,
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            ImageUrl = "https://picsum.photos/350/500/?image=100",
                            Name = "Devon Collier"
                        },
                        new
                        {
                            Id = 20,
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            ImageUrl = "https://picsum.photos/350/500/?image=962",
                            Name = "Bradford Graham"
                        });
                });

            modelBuilder.Entity("MoonReads.Models.AuthorCategory", b =>
                {
                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.HasKey("AuthorId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("AuthorCategories");

                    b.HasData(
                        new
                        {
                            AuthorId = 5,
                            CategoryId = 3,
                            Id = 1
                        },
                        new
                        {
                            AuthorId = 7,
                            CategoryId = 19,
                            Id = 2
                        },
                        new
                        {
                            AuthorId = 17,
                            CategoryId = 20,
                            Id = 3
                        },
                        new
                        {
                            AuthorId = 20,
                            CategoryId = 4,
                            Id = 4
                        },
                        new
                        {
                            AuthorId = 8,
                            CategoryId = 6,
                            Id = 5
                        },
                        new
                        {
                            AuthorId = 7,
                            CategoryId = 6,
                            Id = 6
                        },
                        new
                        {
                            AuthorId = 16,
                            CategoryId = 2,
                            Id = 7
                        },
                        new
                        {
                            AuthorId = 17,
                            CategoryId = 1,
                            Id = 8
                        },
                        new
                        {
                            AuthorId = 18,
                            CategoryId = 19,
                            Id = 9
                        },
                        new
                        {
                            AuthorId = 18,
                            CategoryId = 1,
                            Id = 10
                        },
                        new
                        {
                            AuthorId = 10,
                            CategoryId = 18,
                            Id = 11
                        },
                        new
                        {
                            AuthorId = 20,
                            CategoryId = 3,
                            Id = 12
                        },
                        new
                        {
                            AuthorId = 15,
                            CategoryId = 10,
                            Id = 13
                        },
                        new
                        {
                            AuthorId = 9,
                            CategoryId = 3,
                            Id = 14
                        },
                        new
                        {
                            AuthorId = 17,
                            CategoryId = 17,
                            Id = 15
                        },
                        new
                        {
                            AuthorId = 16,
                            CategoryId = 13,
                            Id = 16
                        },
                        new
                        {
                            AuthorId = 19,
                            CategoryId = 11,
                            Id = 17
                        },
                        new
                        {
                            AuthorId = 10,
                            CategoryId = 15,
                            Id = 18
                        },
                        new
                        {
                            AuthorId = 11,
                            CategoryId = 11,
                            Id = 19
                        },
                        new
                        {
                            AuthorId = 7,
                            CategoryId = 3,
                            Id = 20
                        },
                        new
                        {
                            AuthorId = 19,
                            CategoryId = 4,
                            Id = 21
                        },
                        new
                        {
                            AuthorId = 2,
                            CategoryId = 12,
                            Id = 22
                        },
                        new
                        {
                            AuthorId = 17,
                            CategoryId = 5,
                            Id = 23
                        },
                        new
                        {
                            AuthorId = 5,
                            CategoryId = 9,
                            Id = 24
                        },
                        new
                        {
                            AuthorId = 16,
                            CategoryId = 19,
                            Id = 25
                        },
                        new
                        {
                            AuthorId = 15,
                            CategoryId = 7,
                            Id = 26
                        },
                        new
                        {
                            AuthorId = 6,
                            CategoryId = 18,
                            Id = 27
                        },
                        new
                        {
                            AuthorId = 19,
                            CategoryId = 7,
                            Id = 28
                        },
                        new
                        {
                            AuthorId = 4,
                            CategoryId = 5,
                            Id = 29
                        },
                        new
                        {
                            AuthorId = 4,
                            CategoryId = 8,
                            Id = 30
                        },
                        new
                        {
                            AuthorId = 11,
                            CategoryId = 18,
                            Id = 31
                        },
                        new
                        {
                            AuthorId = 8,
                            CategoryId = 11,
                            Id = 32
                        },
                        new
                        {
                            AuthorId = 11,
                            CategoryId = 14,
                            Id = 33
                        },
                        new
                        {
                            AuthorId = 7,
                            CategoryId = 5,
                            Id = 34
                        },
                        new
                        {
                            AuthorId = 12,
                            CategoryId = 3,
                            Id = 35
                        },
                        new
                        {
                            AuthorId = 10,
                            CategoryId = 7,
                            Id = 36
                        },
                        new
                        {
                            AuthorId = 13,
                            CategoryId = 16,
                            Id = 37
                        },
                        new
                        {
                            AuthorId = 2,
                            CategoryId = 6,
                            Id = 38
                        },
                        new
                        {
                            AuthorId = 16,
                            CategoryId = 8,
                            Id = 39
                        },
                        new
                        {
                            AuthorId = 6,
                            CategoryId = 11,
                            Id = 40
                        },
                        new
                        {
                            AuthorId = 5,
                            CategoryId = 1,
                            Id = 41
                        },
                        new
                        {
                            AuthorId = 3,
                            CategoryId = 10,
                            Id = 43
                        },
                        new
                        {
                            AuthorId = 7,
                            CategoryId = 2,
                            Id = 44
                        },
                        new
                        {
                            AuthorId = 13,
                            CategoryId = 3,
                            Id = 45
                        },
                        new
                        {
                            AuthorId = 11,
                            CategoryId = 7,
                            Id = 46
                        },
                        new
                        {
                            AuthorId = 12,
                            CategoryId = 2,
                            Id = 48
                        },
                        new
                        {
                            AuthorId = 17,
                            CategoryId = 11,
                            Id = 49
                        },
                        new
                        {
                            AuthorId = 2,
                            CategoryId = 3,
                            Id = 50
                        });
                });

            modelBuilder.Entity("MoonReads.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Isbn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Pages")
                        .HasColumnType("integer");

                    b.Property<bool>("Pending")
                        .HasColumnType("boolean");

                    b.Property<int>("PublisherId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            ImageUrl = "https://picsum.photos/350/500/?image=260",
                            Isbn = "6970585522",
                            Pages = 422,
                            Pending = false,
                            PublisherId = 19,
                            ReleaseDate = new DateOnly(2023, 9, 20),
                            Title = "Sleek Fresh Ball"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            ImageUrl = "https://picsum.photos/350/500/?image=12",
                            Isbn = "6741923974",
                            Pages = 725,
                            Pending = false,
                            PublisherId = 14,
                            ReleaseDate = new DateOnly(2023, 4, 4),
                            Title = "Incredible Fresh Shirt"
                        },
                        new
                        {
                            Id = 3,
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            ImageUrl = "https://picsum.photos/350/500/?image=791",
                            Isbn = "2372016639",
                            Pages = 425,
                            Pending = false,
                            PublisherId = 12,
                            ReleaseDate = new DateOnly(2023, 2, 13),
                            Title = "Tasty Concrete Pants"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            ImageUrl = "https://picsum.photos/350/500/?image=627",
                            Isbn = "2517933224",
                            Pages = 839,
                            Pending = false,
                            PublisherId = 11,
                            ReleaseDate = new DateOnly(2023, 7, 4),
                            Title = "Small Plastic Towels"
                        },
                        new
                        {
                            Id = 5,
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            ImageUrl = "https://picsum.photos/350/500/?image=659",
                            Isbn = "1360854033",
                            Pages = 692,
                            Pending = false,
                            PublisherId = 7,
                            ReleaseDate = new DateOnly(2023, 8, 16),
                            Title = "Licensed Soft Cheese"
                        },
                        new
                        {
                            Id = 6,
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            ImageUrl = "https://picsum.photos/350/500/?image=889",
                            Isbn = "4521354922",
                            Pages = 457,
                            Pending = false,
                            PublisherId = 1,
                            ReleaseDate = new DateOnly(2023, 12, 26),
                            Title = "Tasty Soft Pants"
                        },
                        new
                        {
                            Id = 7,
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            ImageUrl = "https://picsum.photos/350/500/?image=578",
                            Isbn = "4975982031",
                            Pages = 154,
                            Pending = false,
                            PublisherId = 12,
                            ReleaseDate = new DateOnly(2023, 2, 3),
                            Title = "Licensed Rubber Shoes"
                        },
                        new
                        {
                            Id = 8,
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            ImageUrl = "https://picsum.photos/350/500/?image=685",
                            Isbn = "9860976008",
                            Pages = 897,
                            Pending = false,
                            PublisherId = 1,
                            ReleaseDate = new DateOnly(2023, 8, 1),
                            Title = "Fantastic Fresh Tuna"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            ImageUrl = "https://picsum.photos/350/500/?image=98",
                            Isbn = "3016700076",
                            Pages = 670,
                            Pending = false,
                            PublisherId = 2,
                            ReleaseDate = new DateOnly(2023, 1, 19),
                            Title = "Awesome Rubber Pizza"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            ImageUrl = "https://picsum.photos/350/500/?image=269",
                            Isbn = "9880647718",
                            Pages = 856,
                            Pending = false,
                            PublisherId = 8,
                            ReleaseDate = new DateOnly(2023, 1, 21),
                            Title = "Intelligent Soft Pizza"
                        },
                        new
                        {
                            Id = 11,
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            ImageUrl = "https://picsum.photos/350/500/?image=467",
                            Isbn = "9122610967",
                            Pages = 479,
                            Pending = false,
                            PublisherId = 8,
                            ReleaseDate = new DateOnly(2023, 1, 28),
                            Title = "Sleek Wooden Pants"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            ImageUrl = "https://picsum.photos/350/500/?image=496",
                            Isbn = "6127281083",
                            Pages = 183,
                            Pending = false,
                            PublisherId = 10,
                            ReleaseDate = new DateOnly(2023, 6, 20),
                            Title = "Handmade Soft Car"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            ImageUrl = "https://picsum.photos/350/500/?image=936",
                            Isbn = "6796008150",
                            Pages = 857,
                            Pending = false,
                            PublisherId = 15,
                            ReleaseDate = new DateOnly(2023, 2, 6),
                            Title = "Practical Steel Car"
                        },
                        new
                        {
                            Id = 14,
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            ImageUrl = "https://picsum.photos/350/500/?image=314",
                            Isbn = "6934178812",
                            Pages = 717,
                            Pending = false,
                            PublisherId = 11,
                            ReleaseDate = new DateOnly(2023, 9, 5),
                            Title = "Intelligent Fresh Ball"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            ImageUrl = "https://picsum.photos/350/500/?image=624",
                            Isbn = "8284756646",
                            Pages = 781,
                            Pending = false,
                            PublisherId = 6,
                            ReleaseDate = new DateOnly(2023, 9, 8),
                            Title = "Practical Fresh Car"
                        },
                        new
                        {
                            Id = 16,
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            ImageUrl = "https://picsum.photos/350/500/?image=842",
                            Isbn = "9795400291",
                            Pages = 658,
                            Pending = false,
                            PublisherId = 19,
                            ReleaseDate = new DateOnly(2023, 5, 13),
                            Title = "Fantastic Plastic Tuna"
                        },
                        new
                        {
                            Id = 17,
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            ImageUrl = "https://picsum.photos/350/500/?image=132",
                            Isbn = "6623556548",
                            Pages = 460,
                            Pending = false,
                            PublisherId = 5,
                            ReleaseDate = new DateOnly(2023, 6, 29),
                            Title = "Tasty Cotton Gloves"
                        },
                        new
                        {
                            Id = 18,
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            ImageUrl = "https://picsum.photos/350/500/?image=972",
                            Isbn = "4699764135",
                            Pages = 492,
                            Pending = false,
                            PublisherId = 4,
                            ReleaseDate = new DateOnly(2023, 1, 24),
                            Title = "Ergonomic Plastic Tuna"
                        },
                        new
                        {
                            Id = 19,
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            ImageUrl = "https://picsum.photos/350/500/?image=855",
                            Isbn = "9770572581",
                            Pages = 881,
                            Pending = false,
                            PublisherId = 8,
                            ReleaseDate = new DateOnly(2023, 9, 30),
                            Title = "Sleek Wooden Hat"
                        },
                        new
                        {
                            Id = 20,
                            Description = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            ImageUrl = "https://picsum.photos/350/500/?image=465",
                            Isbn = "7523512664",
                            Pages = 425,
                            Pending = false,
                            PublisherId = 8,
                            ReleaseDate = new DateOnly(2023, 7, 8),
                            Title = "Ergonomic Steel Shoes"
                        },
                        new
                        {
                            Id = 21,
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            ImageUrl = "https://picsum.photos/350/500/?image=710",
                            Isbn = "7881885406",
                            Pages = 241,
                            Pending = false,
                            PublisherId = 6,
                            ReleaseDate = new DateOnly(2022, 12, 30),
                            Title = "Rustic Concrete Computer"
                        },
                        new
                        {
                            Id = 22,
                            Description = "The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design",
                            ImageUrl = "https://picsum.photos/350/500/?image=429",
                            Isbn = "3851143172",
                            Pages = 886,
                            Pending = false,
                            PublisherId = 17,
                            ReleaseDate = new DateOnly(2023, 11, 26),
                            Title = "Practical Cotton Table"
                        },
                        new
                        {
                            Id = 23,
                            Description = "The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design",
                            ImageUrl = "https://picsum.photos/350/500/?image=478",
                            Isbn = "4832276735",
                            Pages = 488,
                            Pending = false,
                            PublisherId = 12,
                            ReleaseDate = new DateOnly(2023, 6, 7),
                            Title = "Tasty Steel Pants"
                        },
                        new
                        {
                            Id = 24,
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            ImageUrl = "https://picsum.photos/350/500/?image=218",
                            Isbn = "6409186940",
                            Pages = 553,
                            Pending = false,
                            PublisherId = 19,
                            ReleaseDate = new DateOnly(2023, 5, 13),
                            Title = "Ergonomic Concrete Cheese"
                        },
                        new
                        {
                            Id = 25,
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            ImageUrl = "https://picsum.photos/350/500/?image=660",
                            Isbn = "8763831176",
                            Pages = 561,
                            Pending = false,
                            PublisherId = 2,
                            ReleaseDate = new DateOnly(2023, 8, 4),
                            Title = "Sleek Plastic Cheese"
                        },
                        new
                        {
                            Id = 26,
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            ImageUrl = "https://picsum.photos/350/500/?image=176",
                            Isbn = "4359556176",
                            Pages = 703,
                            Pending = false,
                            PublisherId = 15,
                            ReleaseDate = new DateOnly(2023, 3, 15),
                            Title = "Incredible Concrete Chips"
                        },
                        new
                        {
                            Id = 27,
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            ImageUrl = "https://picsum.photos/350/500/?image=980",
                            Isbn = "9378644676",
                            Pages = 198,
                            Pending = false,
                            PublisherId = 12,
                            ReleaseDate = new DateOnly(2023, 4, 9),
                            Title = "Rustic Concrete Car"
                        },
                        new
                        {
                            Id = 28,
                            Description = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            ImageUrl = "https://picsum.photos/350/500/?image=63",
                            Isbn = "6232920736",
                            Pages = 803,
                            Pending = false,
                            PublisherId = 5,
                            ReleaseDate = new DateOnly(2023, 5, 24),
                            Title = "Ergonomic Plastic Table"
                        },
                        new
                        {
                            Id = 29,
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            ImageUrl = "https://picsum.photos/350/500/?image=1026",
                            Isbn = "8060607045",
                            Pages = 856,
                            Pending = false,
                            PublisherId = 11,
                            ReleaseDate = new DateOnly(2023, 6, 14),
                            Title = "Sleek Concrete Shirt"
                        },
                        new
                        {
                            Id = 30,
                            Description = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            ImageUrl = "https://picsum.photos/350/500/?image=842",
                            Isbn = "1804742601",
                            Pages = 889,
                            Pending = false,
                            PublisherId = 17,
                            ReleaseDate = new DateOnly(2023, 5, 21),
                            Title = "Tasty Rubber Bacon"
                        },
                        new
                        {
                            Id = 31,
                            Description = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            ImageUrl = "https://picsum.photos/350/500/?image=98",
                            Isbn = "6579782522",
                            Pages = 835,
                            Pending = false,
                            PublisherId = 9,
                            ReleaseDate = new DateOnly(2023, 1, 4),
                            Title = "Gorgeous Steel Car"
                        },
                        new
                        {
                            Id = 32,
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            ImageUrl = "https://picsum.photos/350/500/?image=303",
                            Isbn = "8298513829",
                            Pages = 470,
                            Pending = false,
                            PublisherId = 6,
                            ReleaseDate = new DateOnly(2023, 12, 23),
                            Title = "Small Concrete Fish"
                        },
                        new
                        {
                            Id = 33,
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            ImageUrl = "https://picsum.photos/350/500/?image=677",
                            Isbn = "4462719108",
                            Pages = 313,
                            Pending = false,
                            PublisherId = 17,
                            ReleaseDate = new DateOnly(2023, 11, 29),
                            Title = "Handcrafted Granite Keyboard"
                        },
                        new
                        {
                            Id = 34,
                            Description = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            ImageUrl = "https://picsum.photos/350/500/?image=286",
                            Isbn = "1004275983",
                            Pages = 592,
                            Pending = false,
                            PublisherId = 12,
                            ReleaseDate = new DateOnly(2023, 3, 15),
                            Title = "Practical Fresh Pizza"
                        },
                        new
                        {
                            Id = 35,
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            ImageUrl = "https://picsum.photos/350/500/?image=348",
                            Isbn = "4477179070",
                            Pages = 200,
                            Pending = false,
                            PublisherId = 2,
                            ReleaseDate = new DateOnly(2023, 3, 9),
                            Title = "Handcrafted Metal Shoes"
                        },
                        new
                        {
                            Id = 36,
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            ImageUrl = "https://picsum.photos/350/500/?image=312",
                            Isbn = "2081443452",
                            Pages = 597,
                            Pending = false,
                            PublisherId = 6,
                            ReleaseDate = new DateOnly(2023, 12, 9),
                            Title = "Incredible Frozen Computer"
                        },
                        new
                        {
                            Id = 37,
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            ImageUrl = "https://picsum.photos/350/500/?image=1027",
                            Isbn = "9439070922",
                            Pages = 436,
                            Pending = false,
                            PublisherId = 18,
                            ReleaseDate = new DateOnly(2023, 6, 3),
                            Title = "Sleek Plastic Gloves"
                        },
                        new
                        {
                            Id = 38,
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            ImageUrl = "https://picsum.photos/350/500/?image=237",
                            Isbn = "8824553206",
                            Pages = 752,
                            Pending = false,
                            PublisherId = 10,
                            ReleaseDate = new DateOnly(2023, 2, 24),
                            Title = "Small Soft Computer"
                        },
                        new
                        {
                            Id = 39,
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            ImageUrl = "https://picsum.photos/350/500/?image=161",
                            Isbn = "6640937804",
                            Pages = 154,
                            Pending = false,
                            PublisherId = 4,
                            ReleaseDate = new DateOnly(2023, 6, 6),
                            Title = "Unbranded Frozen Bike"
                        },
                        new
                        {
                            Id = 40,
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            ImageUrl = "https://picsum.photos/350/500/?image=677",
                            Isbn = "7572054443",
                            Pages = 590,
                            Pending = false,
                            PublisherId = 14,
                            ReleaseDate = new DateOnly(2023, 2, 10),
                            Title = "Small Metal Fish"
                        },
                        new
                        {
                            Id = 41,
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            ImageUrl = "https://picsum.photos/350/500/?image=851",
                            Isbn = "8959764904",
                            Pages = 843,
                            Pending = false,
                            PublisherId = 7,
                            ReleaseDate = new DateOnly(2023, 1, 16),
                            Title = "Sleek Frozen Car"
                        },
                        new
                        {
                            Id = 42,
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            ImageUrl = "https://picsum.photos/350/500/?image=769",
                            Isbn = "4079675628",
                            Pages = 201,
                            Pending = false,
                            PublisherId = 13,
                            ReleaseDate = new DateOnly(2023, 4, 22),
                            Title = "Gorgeous Rubber Tuna"
                        },
                        new
                        {
                            Id = 43,
                            Description = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            ImageUrl = "https://picsum.photos/350/500/?image=129",
                            Isbn = "4264884725",
                            Pages = 215,
                            Pending = false,
                            PublisherId = 7,
                            ReleaseDate = new DateOnly(2023, 10, 7),
                            Title = "Intelligent Cotton Chicken"
                        },
                        new
                        {
                            Id = 44,
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            ImageUrl = "https://picsum.photos/350/500/?image=226",
                            Isbn = "3243486821",
                            Pages = 430,
                            Pending = false,
                            PublisherId = 13,
                            ReleaseDate = new DateOnly(2023, 11, 20),
                            Title = "Ergonomic Plastic Sausages"
                        },
                        new
                        {
                            Id = 45,
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            ImageUrl = "https://picsum.photos/350/500/?image=673",
                            Isbn = "8528268190",
                            Pages = 479,
                            Pending = false,
                            PublisherId = 15,
                            ReleaseDate = new DateOnly(2023, 10, 1),
                            Title = "Awesome Wooden Bike"
                        },
                        new
                        {
                            Id = 46,
                            Description = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            ImageUrl = "https://picsum.photos/350/500/?image=352",
                            Isbn = "6853077319",
                            Pages = 637,
                            Pending = false,
                            PublisherId = 12,
                            ReleaseDate = new DateOnly(2023, 9, 17),
                            Title = "Refined Concrete Salad"
                        },
                        new
                        {
                            Id = 47,
                            Description = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            ImageUrl = "https://picsum.photos/350/500/?image=85",
                            Isbn = "4586500809",
                            Pages = 862,
                            Pending = false,
                            PublisherId = 13,
                            ReleaseDate = new DateOnly(2023, 6, 13),
                            Title = "Ergonomic Concrete Bacon"
                        },
                        new
                        {
                            Id = 48,
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            ImageUrl = "https://picsum.photos/350/500/?image=996",
                            Isbn = "3040081122",
                            Pages = 799,
                            Pending = false,
                            PublisherId = 19,
                            ReleaseDate = new DateOnly(2023, 8, 30),
                            Title = "Sleek Granite Sausages"
                        },
                        new
                        {
                            Id = 49,
                            Description = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            ImageUrl = "https://picsum.photos/350/500/?image=957",
                            Isbn = "5912930458",
                            Pages = 124,
                            Pending = false,
                            PublisherId = 19,
                            ReleaseDate = new DateOnly(2023, 12, 13),
                            Title = "Sleek Concrete Gloves"
                        },
                        new
                        {
                            Id = 50,
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            ImageUrl = "https://picsum.photos/350/500/?image=186",
                            Isbn = "9318869363",
                            Pages = 242,
                            Pending = false,
                            PublisherId = 18,
                            ReleaseDate = new DateOnly(2023, 10, 12),
                            Title = "Licensed Rubber Keyboard"
                        });
                });

            modelBuilder.Entity("MoonReads.Models.BookAuthor", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.HasKey("BookId", "AuthorId");

                    b.HasIndex("AuthorId");

                    b.ToTable("BookAuthors");

                    b.HasData(
                        new
                        {
                            BookId = 8,
                            AuthorId = 18,
                            Id = 1
                        },
                        new
                        {
                            BookId = 26,
                            AuthorId = 14,
                            Id = 2
                        },
                        new
                        {
                            BookId = 2,
                            AuthorId = 2,
                            Id = 3
                        },
                        new
                        {
                            BookId = 21,
                            AuthorId = 11,
                            Id = 4
                        },
                        new
                        {
                            BookId = 19,
                            AuthorId = 6,
                            Id = 5
                        },
                        new
                        {
                            BookId = 35,
                            AuthorId = 18,
                            Id = 6
                        },
                        new
                        {
                            BookId = 36,
                            AuthorId = 6,
                            Id = 7
                        },
                        new
                        {
                            BookId = 42,
                            AuthorId = 13,
                            Id = 8
                        },
                        new
                        {
                            BookId = 9,
                            AuthorId = 19,
                            Id = 9
                        },
                        new
                        {
                            BookId = 27,
                            AuthorId = 16,
                            Id = 10
                        },
                        new
                        {
                            BookId = 39,
                            AuthorId = 3,
                            Id = 11
                        },
                        new
                        {
                            BookId = 8,
                            AuthorId = 12,
                            Id = 12
                        },
                        new
                        {
                            BookId = 7,
                            AuthorId = 1,
                            Id = 13
                        },
                        new
                        {
                            BookId = 13,
                            AuthorId = 16,
                            Id = 14
                        },
                        new
                        {
                            BookId = 41,
                            AuthorId = 3,
                            Id = 15
                        },
                        new
                        {
                            BookId = 6,
                            AuthorId = 8,
                            Id = 16
                        },
                        new
                        {
                            BookId = 32,
                            AuthorId = 12,
                            Id = 17
                        },
                        new
                        {
                            BookId = 42,
                            AuthorId = 8,
                            Id = 18
                        },
                        new
                        {
                            BookId = 11,
                            AuthorId = 15,
                            Id = 19
                        },
                        new
                        {
                            BookId = 16,
                            AuthorId = 8,
                            Id = 20
                        },
                        new
                        {
                            BookId = 4,
                            AuthorId = 9,
                            Id = 21
                        },
                        new
                        {
                            BookId = 40,
                            AuthorId = 3,
                            Id = 22
                        },
                        new
                        {
                            BookId = 31,
                            AuthorId = 15,
                            Id = 23
                        },
                        new
                        {
                            BookId = 20,
                            AuthorId = 19,
                            Id = 24
                        },
                        new
                        {
                            BookId = 46,
                            AuthorId = 14,
                            Id = 25
                        },
                        new
                        {
                            BookId = 36,
                            AuthorId = 18,
                            Id = 27
                        },
                        new
                        {
                            BookId = 5,
                            AuthorId = 1,
                            Id = 28
                        },
                        new
                        {
                            BookId = 35,
                            AuthorId = 19,
                            Id = 29
                        },
                        new
                        {
                            BookId = 28,
                            AuthorId = 1,
                            Id = 30
                        },
                        new
                        {
                            BookId = 37,
                            AuthorId = 5,
                            Id = 32
                        },
                        new
                        {
                            BookId = 9,
                            AuthorId = 7,
                            Id = 33
                        },
                        new
                        {
                            BookId = 11,
                            AuthorId = 4,
                            Id = 34
                        },
                        new
                        {
                            BookId = 21,
                            AuthorId = 9,
                            Id = 35
                        },
                        new
                        {
                            BookId = 32,
                            AuthorId = 4,
                            Id = 37
                        },
                        new
                        {
                            BookId = 36,
                            AuthorId = 7,
                            Id = 38
                        },
                        new
                        {
                            BookId = 17,
                            AuthorId = 2,
                            Id = 39
                        },
                        new
                        {
                            BookId = 49,
                            AuthorId = 9,
                            Id = 40
                        },
                        new
                        {
                            BookId = 31,
                            AuthorId = 7,
                            Id = 41
                        },
                        new
                        {
                            BookId = 44,
                            AuthorId = 3,
                            Id = 42
                        },
                        new
                        {
                            BookId = 23,
                            AuthorId = 6,
                            Id = 43
                        },
                        new
                        {
                            BookId = 33,
                            AuthorId = 16,
                            Id = 44
                        },
                        new
                        {
                            BookId = 24,
                            AuthorId = 17,
                            Id = 45
                        },
                        new
                        {
                            BookId = 34,
                            AuthorId = 6,
                            Id = 46
                        },
                        new
                        {
                            BookId = 10,
                            AuthorId = 6,
                            Id = 47
                        },
                        new
                        {
                            BookId = 27,
                            AuthorId = 10,
                            Id = 48
                        },
                        new
                        {
                            BookId = 35,
                            AuthorId = 12,
                            Id = 49
                        },
                        new
                        {
                            BookId = 47,
                            AuthorId = 6,
                            Id = 50
                        },
                        new
                        {
                            BookId = 26,
                            AuthorId = 5,
                            Id = 51
                        },
                        new
                        {
                            BookId = 26,
                            AuthorId = 10,
                            Id = 52
                        },
                        new
                        {
                            BookId = 13,
                            AuthorId = 6,
                            Id = 53
                        },
                        new
                        {
                            BookId = 13,
                            AuthorId = 11,
                            Id = 54
                        },
                        new
                        {
                            BookId = 8,
                            AuthorId = 15,
                            Id = 55
                        },
                        new
                        {
                            BookId = 35,
                            AuthorId = 13,
                            Id = 56
                        },
                        new
                        {
                            BookId = 48,
                            AuthorId = 3,
                            Id = 57
                        },
                        new
                        {
                            BookId = 38,
                            AuthorId = 12,
                            Id = 59
                        },
                        new
                        {
                            BookId = 39,
                            AuthorId = 19,
                            Id = 60
                        },
                        new
                        {
                            BookId = 34,
                            AuthorId = 9,
                            Id = 61
                        },
                        new
                        {
                            BookId = 34,
                            AuthorId = 12,
                            Id = 62
                        },
                        new
                        {
                            BookId = 12,
                            AuthorId = 7,
                            Id = 64
                        },
                        new
                        {
                            BookId = 33,
                            AuthorId = 5,
                            Id = 65
                        },
                        new
                        {
                            BookId = 32,
                            AuthorId = 16,
                            Id = 66
                        },
                        new
                        {
                            BookId = 7,
                            AuthorId = 14,
                            Id = 67
                        },
                        new
                        {
                            BookId = 46,
                            AuthorId = 8,
                            Id = 68
                        },
                        new
                        {
                            BookId = 40,
                            AuthorId = 8,
                            Id = 69
                        },
                        new
                        {
                            BookId = 45,
                            AuthorId = 4,
                            Id = 70
                        },
                        new
                        {
                            BookId = 1,
                            AuthorId = 3,
                            Id = 71
                        },
                        new
                        {
                            BookId = 32,
                            AuthorId = 15,
                            Id = 72
                        },
                        new
                        {
                            BookId = 8,
                            AuthorId = 1,
                            Id = 73
                        },
                        new
                        {
                            BookId = 18,
                            AuthorId = 2,
                            Id = 74
                        },
                        new
                        {
                            BookId = 45,
                            AuthorId = 1,
                            Id = 75
                        });
                });

            modelBuilder.Entity("MoonReads.Models.BookCategory", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.HasKey("BookId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("BookCategories");

                    b.HasData(
                        new
                        {
                            BookId = 33,
                            CategoryId = 8,
                            Id = 1
                        },
                        new
                        {
                            BookId = 7,
                            CategoryId = 20,
                            Id = 2
                        },
                        new
                        {
                            BookId = 5,
                            CategoryId = 18,
                            Id = 3
                        },
                        new
                        {
                            BookId = 28,
                            CategoryId = 11,
                            Id = 4
                        },
                        new
                        {
                            BookId = 32,
                            CategoryId = 4,
                            Id = 5
                        },
                        new
                        {
                            BookId = 24,
                            CategoryId = 14,
                            Id = 6
                        },
                        new
                        {
                            BookId = 30,
                            CategoryId = 17,
                            Id = 7
                        },
                        new
                        {
                            BookId = 22,
                            CategoryId = 18,
                            Id = 8
                        },
                        new
                        {
                            BookId = 47,
                            CategoryId = 6,
                            Id = 9
                        },
                        new
                        {
                            BookId = 42,
                            CategoryId = 15,
                            Id = 11
                        },
                        new
                        {
                            BookId = 50,
                            CategoryId = 18,
                            Id = 13
                        },
                        new
                        {
                            BookId = 17,
                            CategoryId = 4,
                            Id = 14
                        },
                        new
                        {
                            BookId = 37,
                            CategoryId = 9,
                            Id = 15
                        },
                        new
                        {
                            BookId = 50,
                            CategoryId = 12,
                            Id = 16
                        },
                        new
                        {
                            BookId = 40,
                            CategoryId = 1,
                            Id = 17
                        },
                        new
                        {
                            BookId = 8,
                            CategoryId = 9,
                            Id = 18
                        },
                        new
                        {
                            BookId = 50,
                            CategoryId = 16,
                            Id = 19
                        },
                        new
                        {
                            BookId = 28,
                            CategoryId = 18,
                            Id = 20
                        },
                        new
                        {
                            BookId = 10,
                            CategoryId = 7,
                            Id = 21
                        },
                        new
                        {
                            BookId = 11,
                            CategoryId = 13,
                            Id = 22
                        },
                        new
                        {
                            BookId = 1,
                            CategoryId = 7,
                            Id = 23
                        },
                        new
                        {
                            BookId = 46,
                            CategoryId = 12,
                            Id = 24
                        },
                        new
                        {
                            BookId = 39,
                            CategoryId = 16,
                            Id = 25
                        },
                        new
                        {
                            BookId = 36,
                            CategoryId = 8,
                            Id = 27
                        },
                        new
                        {
                            BookId = 35,
                            CategoryId = 19,
                            Id = 28
                        },
                        new
                        {
                            BookId = 49,
                            CategoryId = 5,
                            Id = 29
                        },
                        new
                        {
                            BookId = 1,
                            CategoryId = 5,
                            Id = 30
                        },
                        new
                        {
                            BookId = 26,
                            CategoryId = 8,
                            Id = 31
                        },
                        new
                        {
                            BookId = 39,
                            CategoryId = 5,
                            Id = 32
                        },
                        new
                        {
                            BookId = 10,
                            CategoryId = 19,
                            Id = 33
                        },
                        new
                        {
                            BookId = 45,
                            CategoryId = 12,
                            Id = 34
                        },
                        new
                        {
                            BookId = 33,
                            CategoryId = 20,
                            Id = 35
                        },
                        new
                        {
                            BookId = 46,
                            CategoryId = 4,
                            Id = 36
                        },
                        new
                        {
                            BookId = 38,
                            CategoryId = 2,
                            Id = 37
                        },
                        new
                        {
                            BookId = 4,
                            CategoryId = 11,
                            Id = 38
                        },
                        new
                        {
                            BookId = 27,
                            CategoryId = 17,
                            Id = 39
                        },
                        new
                        {
                            BookId = 45,
                            CategoryId = 13,
                            Id = 40
                        },
                        new
                        {
                            BookId = 48,
                            CategoryId = 15,
                            Id = 41
                        },
                        new
                        {
                            BookId = 20,
                            CategoryId = 20,
                            Id = 42
                        },
                        new
                        {
                            BookId = 15,
                            CategoryId = 1,
                            Id = 43
                        },
                        new
                        {
                            BookId = 43,
                            CategoryId = 9,
                            Id = 44
                        },
                        new
                        {
                            BookId = 17,
                            CategoryId = 5,
                            Id = 45
                        },
                        new
                        {
                            BookId = 24,
                            CategoryId = 16,
                            Id = 46
                        },
                        new
                        {
                            BookId = 38,
                            CategoryId = 7,
                            Id = 47
                        },
                        new
                        {
                            BookId = 18,
                            CategoryId = 16,
                            Id = 48
                        },
                        new
                        {
                            BookId = 28,
                            CategoryId = 20,
                            Id = 49
                        },
                        new
                        {
                            BookId = 22,
                            CategoryId = 2,
                            Id = 50
                        },
                        new
                        {
                            BookId = 23,
                            CategoryId = 7,
                            Id = 51
                        },
                        new
                        {
                            BookId = 47,
                            CategoryId = 16,
                            Id = 52
                        },
                        new
                        {
                            BookId = 43,
                            CategoryId = 20,
                            Id = 53
                        },
                        new
                        {
                            BookId = 10,
                            CategoryId = 13,
                            Id = 54
                        },
                        new
                        {
                            BookId = 15,
                            CategoryId = 4,
                            Id = 55
                        },
                        new
                        {
                            BookId = 20,
                            CategoryId = 3,
                            Id = 56
                        },
                        new
                        {
                            BookId = 18,
                            CategoryId = 8,
                            Id = 57
                        },
                        new
                        {
                            BookId = 15,
                            CategoryId = 16,
                            Id = 58
                        },
                        new
                        {
                            BookId = 47,
                            CategoryId = 3,
                            Id = 60
                        },
                        new
                        {
                            BookId = 4,
                            CategoryId = 10,
                            Id = 61
                        },
                        new
                        {
                            BookId = 13,
                            CategoryId = 9,
                            Id = 62
                        },
                        new
                        {
                            BookId = 27,
                            CategoryId = 3,
                            Id = 63
                        },
                        new
                        {
                            BookId = 22,
                            CategoryId = 10,
                            Id = 64
                        },
                        new
                        {
                            BookId = 37,
                            CategoryId = 6,
                            Id = 65
                        },
                        new
                        {
                            BookId = 49,
                            CategoryId = 11,
                            Id = 66
                        },
                        new
                        {
                            BookId = 20,
                            CategoryId = 16,
                            Id = 67
                        },
                        new
                        {
                            BookId = 9,
                            CategoryId = 13,
                            Id = 68
                        },
                        new
                        {
                            BookId = 41,
                            CategoryId = 13,
                            Id = 69
                        },
                        new
                        {
                            BookId = 7,
                            CategoryId = 7,
                            Id = 70
                        },
                        new
                        {
                            BookId = 43,
                            CategoryId = 5,
                            Id = 71
                        },
                        new
                        {
                            BookId = 6,
                            CategoryId = 4,
                            Id = 72
                        },
                        new
                        {
                            BookId = 43,
                            CategoryId = 7,
                            Id = 73
                        },
                        new
                        {
                            BookId = 22,
                            CategoryId = 8,
                            Id = 74
                        },
                        new
                        {
                            BookId = 1,
                            CategoryId = 12,
                            Id = 75
                        });
                });

            modelBuilder.Entity("MoonReads.Models.Bookshelf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookshelves");
                });

            modelBuilder.Entity("MoonReads.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Toys"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Tools & Tools"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Games"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Toys"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Toys, Automotive & Clothing"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Jewelery, Kids & Tools"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Automotive, Toys & Outdoors"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Sports & Sports"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Tools & Home"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Jewelery, Kids & Outdoors"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Beauty, Beauty & Toys"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Home"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Garden & Electronics"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Sports, Electronics & Tools"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Toys"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Garden, Baby & Grocery"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Toys & Automotive"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Toys, Electronics & Movies"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Games"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Movies"
                        });
                });

            modelBuilder.Entity("MoonReads.Models.DataVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Table")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Version")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("DataVersions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Table = "Authors",
                            Version = 0
                        },
                        new
                        {
                            Id = 2,
                            Table = "Books",
                            Version = 0
                        },
                        new
                        {
                            Id = 3,
                            Table = "Categories",
                            Version = 0
                        },
                        new
                        {
                            Id = 4,
                            Table = "Publishers",
                            Version = 0
                        },
                        new
                        {
                            Id = 5,
                            Table = "AuthorCategories",
                            Version = 0
                        },
                        new
                        {
                            Id = 6,
                            Table = "BookAuthors",
                            Version = 0
                        },
                        new
                        {
                            Id = 7,
                            Table = "BookCategories",
                            Version = 0
                        },
                        new
                        {
                            Id = 8,
                            Table = "Ratings",
                            Version = 0
                        },
                        new
                        {
                            Id = 9,
                            Table = "Reviews",
                            Version = 0
                        },
                        new
                        {
                            Id = 10,
                            Table = "Reactions",
                            Version = 0
                        },
                        new
                        {
                            Id = 11,
                            Table = "Bookshelves",
                            Version = 0
                        });
                });

            modelBuilder.Entity("MoonReads.Models.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            ImageUrl = "https://picsum.photos/350/500/?image=929",
                            Name = "Mueller, Sanford and Wunsch"
                        },
                        new
                        {
                            Id = 2,
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            ImageUrl = "https://picsum.photos/350/500/?image=762",
                            Name = "Monahan Inc"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            ImageUrl = "https://picsum.photos/350/500/?image=40",
                            Name = "Ziemann, Larson and Kertzmann"
                        },
                        new
                        {
                            Id = 4,
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            ImageUrl = "https://picsum.photos/350/500/?image=231",
                            Name = "DuBuque - Miller"
                        },
                        new
                        {
                            Id = 5,
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            ImageUrl = "https://picsum.photos/350/500/?image=703",
                            Name = "Gorczany - Ruecker"
                        },
                        new
                        {
                            Id = 6,
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            ImageUrl = "https://picsum.photos/350/500/?image=57",
                            Name = "Toy - Mraz"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            ImageUrl = "https://picsum.photos/350/500/?image=193",
                            Name = "Kutch, Weber and Reilly"
                        },
                        new
                        {
                            Id = 8,
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            ImageUrl = "https://picsum.photos/350/500/?image=1018",
                            Name = "Braun - Denesik"
                        },
                        new
                        {
                            Id = 9,
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            ImageUrl = "https://picsum.photos/350/500/?image=998",
                            Name = "Hodkiewicz - Donnelly"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            ImageUrl = "https://picsum.photos/350/500/?image=40",
                            Name = "Lang, Herman and Turner"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            ImageUrl = "https://picsum.photos/350/500/?image=29",
                            Name = "Haley - Grimes"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            ImageUrl = "https://picsum.photos/350/500/?image=794",
                            Name = "Hilll - Bartell"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            ImageUrl = "https://picsum.photos/350/500/?image=581",
                            Name = "Welch - Greenfelder"
                        },
                        new
                        {
                            Id = 14,
                            Description = "The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design",
                            ImageUrl = "https://picsum.photos/350/500/?image=660",
                            Name = "Shanahan Group"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            ImageUrl = "https://picsum.photos/350/500/?image=932",
                            Name = "Jacobson, Ritchie and Miller"
                        },
                        new
                        {
                            Id = 16,
                            Description = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            ImageUrl = "https://picsum.photos/350/500/?image=526",
                            Name = "Quigley, Von and Dicki"
                        },
                        new
                        {
                            Id = 17,
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            ImageUrl = "https://picsum.photos/350/500/?image=424",
                            Name = "Lubowitz, Hermiston and MacGyver"
                        },
                        new
                        {
                            Id = 18,
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            ImageUrl = "https://picsum.photos/350/500/?image=790",
                            Name = "O'Reilly - Walter"
                        },
                        new
                        {
                            Id = 19,
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            ImageUrl = "https://picsum.photos/350/500/?image=109",
                            Name = "Kiehn Group"
                        },
                        new
                        {
                            Id = 20,
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            ImageUrl = "https://picsum.photos/350/500/?image=983",
                            Name = "Stark and Sons"
                        });
                });

            modelBuilder.Entity("MoonReads.Models.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<int>("Rate")
                        .HasColumnType("integer");

                    b.Property<int?>("ReviewId")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("ReviewId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("MoonReads.Models.Reaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Like")
                        .HasColumnType("boolean");

                    b.Property<int?>("ReviewId")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ReviewId");

                    b.HasIndex("UserId");

                    b.ToTable("Reactions");
                });

            modelBuilder.Entity("MoonReads.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("MoonReads.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("Avatar")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("MoonReads.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("MoonReads.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoonReads.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("MoonReads.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MoonReads.Models.AuthorCategory", b =>
                {
                    b.HasOne("MoonReads.Models.Author", "Author")
                        .WithMany("AuthorCategories")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoonReads.Models.Category", "Category")
                        .WithMany("AuthorCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MoonReads.Models.Book", b =>
                {
                    b.HasOne("MoonReads.Models.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("MoonReads.Models.BookAuthor", b =>
                {
                    b.HasOne("MoonReads.Models.Author", "Author")
                        .WithMany("BookAuthors")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoonReads.Models.Book", "Book")
                        .WithMany("BookAuthors")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("MoonReads.Models.BookCategory", b =>
                {
                    b.HasOne("MoonReads.Models.Book", "Book")
                        .WithMany("BookCategories")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoonReads.Models.Category", "Category")
                        .WithMany("BookCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MoonReads.Models.Bookshelf", b =>
                {
                    b.HasOne("MoonReads.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoonReads.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoonReads.Models.Rating", b =>
                {
                    b.HasOne("MoonReads.Models.Book", "Book")
                        .WithMany("Rating")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoonReads.Models.Review", "Review")
                        .WithOne("Rating")
                        .HasForeignKey("MoonReads.Models.Rating", "ReviewId");

                    b.HasOne("MoonReads.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Review");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoonReads.Models.Reaction", b =>
                {
                    b.HasOne("MoonReads.Models.Review", "Review")
                        .WithMany("Reactions")
                        .HasForeignKey("ReviewId");

                    b.HasOne("MoonReads.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Review");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoonReads.Models.Author", b =>
                {
                    b.Navigation("AuthorCategories");

                    b.Navigation("BookAuthors");
                });

            modelBuilder.Entity("MoonReads.Models.Book", b =>
                {
                    b.Navigation("BookAuthors");

                    b.Navigation("BookCategories");

                    b.Navigation("Rating");
                });

            modelBuilder.Entity("MoonReads.Models.Category", b =>
                {
                    b.Navigation("AuthorCategories");

                    b.Navigation("BookCategories");
                });

            modelBuilder.Entity("MoonReads.Models.Publisher", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("MoonReads.Models.Review", b =>
                {
                    b.Navigation("Rating")
                        .IsRequired();

                    b.Navigation("Reactions");
                });
#pragma warning restore 612, 618
        }
    }
}
